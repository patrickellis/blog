---
import { getCollection } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { SITE_TITLE } from '../consts';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	const years = [...new Set(posts.map((post) => new Date(post.data.pubDate).getFullYear()))];
	return years.map((year) => {
		const filteredPosts = posts
			.filter((post) => new Date(post.data.pubDate).getFullYear() === year)
			.sort((a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf());
		return {
			params: { year: String(year) },
			props: { posts: filteredPosts },
		};
	});
}

const { year } = Astro.params;
const { posts } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={`${SITE_TITLE} - ${year}`} description={`Posts from ${year}`} />
	</head>
	<body style="display: flex; flex-direction: column; min-height: 100vh;">
		<Header />
		<main>
			<div class="grid-container">
			<section>
				<h2>Posts from {year}</h2>
				<ul>
					{
						posts.map((post) => (
							<li class="post-list-item">
								<a href={`/blog/${post.id}`}>
									<h3 class="title">{post.data.title}</h3>
									<p class="description">{post.data.description}</p>
									<FormattedDate date={post.data.pubDate} />
								</a>
							</li>
						))
					}
				</ul>
			</section>
			<aside>
				<h2>Index</h2>
				<ul class="index-list">
					{
						posts.map((post) => (
							<li>
								<a href={`/blog/${post.id}`}>
									{post.data.title}
								</a>
								<br />
								<small>
									<FormattedDate date={post.data.pubDate} />
								</small>
							</li>
						))
					}
				</ul>
			</aside>
		</main>
		<Footer />
	</body>
</html>
